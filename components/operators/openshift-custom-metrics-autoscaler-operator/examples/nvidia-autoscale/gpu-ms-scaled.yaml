---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: scale-nvidia-gpu
  namespace: openshift-machine-api
spec:
  cooldownPeriod: 300
  pollingInterval: 30
  idleReplicaCount: 0
  minReplicaCount: 1
  maxReplicaCount: 3
  scaleTargetRef:
    apiVersion: machine.openshift.io/v1beta1
    kind: MachineSet
    name: g4dn-4xlarge
  advanced:
  #   restoreToOriginalReplicaCount: true
    horizontalPodAutoscalerConfig:

  triggers:
  - type: prometheus
    authenticationRef:
      # kind: ClusterTriggerAuthentication
      name: scale-nvidia-gpu
    metadata:
      authModes: bearer
      serverAddress: https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
      # see https://www.redhat.com/en/blog/thanos-querier-versus-thanos-querier
      #
      # serverAddress: https://thanos-querier.openshift-monitoring.svc.cluster.local:9092
      # port 9092 requires the namespace to be specified - only queries on namespace
      # port 9091 is a cluster wide query
      # namespace: nvidia-gpu-verification
      metricName: kube_pod_status_unschedulable
      threshold: '1'
      query: |
        # DEBUG
        # vector(1)

        # sum(kube_pod_status_unschedulable) by (pod, namespace)
        # count by (namespace, pod) (kube_pod_status_unschedulable) and count by (namespace, pod) (kube_pod_resource_request{resource="nvidia.com/gpu"})
        # sum(kube_pod_status_unschedulable)

        # sum(kube_pod_resource_request{resource="nvidia.com/gpu"} >=1 ) by (pod, namespace)

        sum (
          kube_pod_status_unschedulable
            * on(namespace, pod) group_right(resource)
          kube_pod_resource_request{resource="nvidia.com/gpu"}
        )
      # ignoreNullValues: 'false'
      # unsafeSsl: 'false'
  - type: prometheus
    authenticationRef:
      name: scale-nvidia-gpu
    metadata:
      authModes: bearer
      serverAddress: https://thanos-querier.openshift-monitoring.svc.cluster.local:9091
      metricName: kube_pod_resource_request
      threshold: '1'
      query: |
        sum(kube_pod_resource_request{resource="nvidia.com/gpu"} >=1 )
