---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nvidia-gpu-console-setup
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  - services
  verbs:
  - '*'
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - '*'
- apiGroups:
  - operator.openshift.io
  resources:
  - consoles
  resourceNames:
  - cluster
  verbs:
  - '*'
- apiGroups:
  - console.openshift.io
  resources:
  - consoleplugins
  verbs:
  - '*'
- apiGroups:
  - nvidia.com
  resources:
  - clusterpolicies
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nvidia-gpu-console-setup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nvidia-gpu-console-setup
subjects:
  - kind: ServiceAccount
    name: nvidia-gpu-console-setup
    namespace: nvidia-gpu-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nvidia-gpu-console-setup
  namespace: openshift-config-managed
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nvidia-gpu-console-setup
subjects:
  - kind: ServiceAccount
    name: nvidia-gpu-console-setup
    namespace: nvidia-gpu-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nvidia-gpu-console-setup
  namespace: nvidia-gpu-operator
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: Sync
    # argocd.argoproj.io/hook-delete-policy: HookSucceeded
  generateName: nvidia-gpu-console-setup-
  name: nvidia-gpu-console-setup
  namespace: nvidia-gpu-operator
spec:
  template:
    spec:
      containers:
        - name: nvidia-gpu-console-setup
          image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /bin/bash
            - -c
            - |
              #!/usr/bin/env bash
              cd /tmp

              nvidia_install_console_plugin(){
                GIT_URL=https://github.com/codekow/demo-ai-gitops-catalog.git

                if which helm; then
                  helm repo add rh-ecosystem-edge https://rh-ecosystem-edge.github.io/console-plugin-nvidia-gpu || true
                  helm repo update > /dev/null 2>&1
                  helm upgrade --install -n nvidia-gpu-operator console-plugin-nvidia-gpu rh-ecosystem-edge/console-plugin-nvidia-gpu > /dev/null 2>&1
                else
                  oc apply -k "${GIT_URL}/components/operators/gpu-operator-certified/instance/base/console-plugin-nvidia-gpu"
                fi
              }

              nvidia_activate_console_plugin(){
                if oc get consoles.operator.openshift.io cluster --output=jsonpath="{.spec.plugins}" >/dev/null; then
                  oc patch consoles.operator.openshift.io cluster --patch '{ "spec": { "plugins": ["console-plugin-nvidia-gpu"] } }' --type=merge
                else
                  oc get consoles.operator.openshift.io cluster --output=jsonpath="{.spec.plugins}" | grep -q console-plugin-nvidia-gpu || \
                    oc patch consoles.operator.openshift.io cluster --patch '[{"op": "add", "path": "/spec/plugins/-", "value": "console-plugin-nvidia-gpu" }]' --type=json
                fi

                oc patch clusterpolicies.nvidia.com gpu-cluster-policy --patch '{ "spec": { "dcgmExporter": { "config": { "name": "console-plugin-nvidia-gpu" } } } }' --type=merge
                oc -n nvidia-gpu-operator get deploy -l app.kubernetes.io/name=console-plugin-nvidia-gpu
              }

              nvidia_setup_console_plugin(){
                nvidia_install_console_plugin || return
                nvidia_activate_console_plugin || return
              }

              nvidia_setup_console_plugin

      restartPolicy: Never
      terminationGracePeriodSeconds: 30
      serviceAccount: nvidia-gpu-console-setup
      serviceAccountName: nvidia-gpu-console-setup
