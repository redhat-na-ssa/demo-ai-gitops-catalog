apiVersion: kubeflow.org/v1
kind: Notebook
metadata:
  annotations:
    kubeflow-resource-stopped: '2023-11-01T00:00:00Z'
    notebooks.opendatahub.io/inject-oauth: "true"
    notebooks.opendatahub.io/last-image-selection: 'tensorflow:2023.2'
    notebooks.opendatahub.io/last-size-selection: "Demo / Workshop"
    opendatahub.io/username: user0
    openshift.io/description: "My Fraud Detection workbench"
    openshift.io/display-name: Fraud Detection
  labels:
    app: fraud-detection
    opendatahub.io/dashboard: "true"
    opendatahub.io/odh-managed: "true"
  name: fraud-detection
  namespace: user0
spec:
  template:
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: nvidia.com/gpu.present
                operator: NotIn
                values:
                - "true"
            weight: 1
      containers:
      - env:
        - name: NOTEBOOK_ARGS
          value: |-
            --ServerApp.port=8888
            --ServerApp.token=''
            --ServerApp.password=''
            --ServerApp.base_url=/notebook/user0/fraud-detection
            --ServerApp.quit_button=False
        - name: JUPYTER_IMAGE
          value: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/tensorflow:2023.2
        envFrom:
        - secretRef:
            name: aws-connection-minio
        image: image-registry.openshift-image-registry.svc:5000/redhat-ods-applications/tensorflow:2023.2
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /notebook/user0/fraud-detection/api
            port: notebook-port
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: fraud-detection
        ports:
        - containerPort: 8888
          name: notebook-port
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /notebook/user0/fraud-detection/api
            port: notebook-port
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: '4'
            memory: 6Gi
          requests:
            cpu: '1'
            memory: 1Gi
        volumeMounts:
        - mountPath: /opt/app-root/src
          name: fraud-detection
        workingDir: /opt/app-root/src
      - args:
        - --provider=openshift
        - --https-address=:8443
        - --http-address=
        - --openshift-service-account=fraud-detection
        - --cookie-secret-file=/etc/oauth/config/cookie_secret
        - --cookie-expire=24h0m0s
        - --tls-cert=/etc/tls/private/tls.crt
        - --tls-key=/etc/tls/private/tls.key
        - --upstream=http://localhost:8888
        - --upstream-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - --email-domain=*
        - --skip-provider-button
        - --openshift-sar={"verb":"get","resource":"notebooks","resourceAPIGroup":"kubeflow.org","resourceName":"fraud-detection","namespace":"$(NAMESPACE)"}
        # - --logout-url=https://rhods-dashboard-redhat-ods-applications.apps.cluster-xx7jv.xx7jv.sandbox1365.opentlc.com/projects/ds-group-project?notebookLogout=fraud-detection
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # image: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:2246f6a2f5d48fb94e9bcf30a4945e4324ddc76ea49140f5483539450ab0b621
        image: registry.redhat.io/openshift4/ose-oauth-proxy:v4.14
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: oauth-proxy
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: oauth-proxy
        ports:
        - containerPort: 8443
          name: oauth-proxy
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /oauth/healthz
            port: oauth-proxy
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - mountPath: /etc/oauth/config
          name: oauth-config
        - mountPath: /etc/tls/private
          name: tls-certificates
      enableServiceLinks: false
      serviceAccountName: fraud-detection
      volumes:
      - name: fraud-detection
        persistentVolumeClaim:
          claimName: fraud-detection
      - name: oauth-config
        secret:
          defaultMode: 420
          secretName: fraud-detection-oauth-config
      - name: tls-certificates
        secret:
          defaultMode: 420
          secretName: fraud-detection-tls
