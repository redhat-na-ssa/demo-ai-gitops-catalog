apiVersion: console.openshift.io/v1
kind: ConsoleQuickStart
metadata:
  name: create-s2i-image
spec:
  displayName: Create a Source-to-Image (s2i) container image
  description: >-
    Want to make a custom image that can be used for
    source-to-image (s2i) on OpenShift?
    Let's start with a simple example to learn the basics.
  durationMinutes: 10
  introduction: >-
    ### This Quick Start shows you how to create a simple
    source-to-image
  prerequisites:
    - A basic knowledge of OpenShift
  tasks:
    - title: Create a sample application
      description: >-
        To create a sample application:


        1. Click on the [perspective switcher]{{highlight
        qs-perspective-switcher}} at the top of the navigation, and select
        **Developer**.


        1. In the navigation menu, click [Add]{{highlight qs-nav-add}}.


        1. Using the project drop-down list, select the project you would like
        to create the sample application in. You can also create a new one if
        you’d like.


        1. Click **Samples** to create an application from a code sample.


        1. Click on the **Basic NodeJS** card.


        1. Scroll down and click **Create**.


        The **Topology** view will load with your new sample application. The
        application is represented by the light grey area with the white border.
        The deployment is a white circle.
      review:
        failedTaskHelp: This task isn’t verified yet. Try the task again.
        instructions: |-
          #### To verify the application was successfully created:
          1. Do you see a **sample-app** application?
          2. Do you see a **nodejs-basic** deployment?
      summary:
        failed: Try the steps again.
        success: You have created a sample application!

    - title: View build status
      description: >-
        ### To view the build status of the sample application:

        1. Hover over the icon on the bottom left quadrant of the
        **nodejs-basic** deployment to see the build status in a tooltip.

        2. Click on the icon for quick access to the build log.


        You should be able to see the log stream of the **nodejs-basic-1** build
        on the **Build Details** page.
      review:
        failedTaskHelp: This task isn’t verified yet. Try the task again.
        instructions: >-
          #### To verify the build is complete:

          Wait for the build to complete. It may take a few minutes.  Do you see
          a **Completed** badge on the page header?
      summary:
        failed: Try the steps again.
        success: Your sample app is now built!
    - title: View the associated code
      description: >-
        ### To view the associated code:

        1. In the navigation menu, click [Topology]{{highlight
        qs-nav-topology}}.


        1. The icon on the bottom right quadrant of the **nodejs-basic**
        deployment either represents the Git repository of the associated code,
        OR if the appropriate operators are installed, it will bring up the
        associated code in your IDE.


        1. If the icon shown is Bitbucket, GitHub, GitLab or generic Git, click
        it to navigate to the associate Git repository. Otherwise, if the icon
        shown is CodeReady Workspaces or Eclipse Che, click it to bring up the
        associated code in your IDE.
      review:
        failedTaskHelp: This task isn’t verified yet. Try the task again.
        instructions: >-
          Verify that you can see the code associated with the sample app:

          - Was a new browser tab opened either to your associated Git
          repository or to your IDE?
      summary:
        failed: Try the steps again.
        success: You viewed the code associated with the **nodejs-basic** deployment.
    - title: View the pod status
      description: >-
        ### To view the pod status:

        1. Click on the browser tab with OpenShift.  Notice that the
        **nodejs-basic** deployment has a pod donut imposed on the circle,
        representing the pod status.

        2. Hover over the pod donut.


        You should now see the pod status in a tooltip.
      review:
        failedTaskHelp: This task isn’t verified yet. Try the task again.
        instructions: |-
          #### To verify you see the pod status:
          Do you see the number of associated pods and their statuses?
      summary:
        failed: Try the steps again.
        success: You have viewed the pod status for your app!
    - title: Run the sample application
      description: >-
        ### To run the sample application:

        1. The icon on the top right quadrant of the **nodejs-basic** deployment
        represents the route URL. Click on it to open the URL and run the
        application.


        The application will be run in a new tab.
      review:
        failedTaskHelp: This task isn’t verified yet. Try the task again.
        instructions: >-
          #### To verify your sample application is running:

          1. Make sure you are in the new tab.

          2. Does the page have a **Hello from Node.js Starter Application!**
          title?
      summary:
        failed: Try the steps again.
        success: You have run your sample app!
  conclusion: >-
    Your sample application is deployed and ready! To add health checks to your
    sample app, take the **Adding health checks to your sample application**
    quick start.
  # nextQuickStart:
  #   - add-healthchecks
