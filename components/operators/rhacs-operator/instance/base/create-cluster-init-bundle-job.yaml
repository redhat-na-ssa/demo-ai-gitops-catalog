apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "2"
  name: create-cluster-init-bundle
spec:
  template:
    spec:
      containers:
        - image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: central-htpasswd
                  key: password
          command:
            - /bin/bash
            - -c
            - |
              #!/bin/bash
              if kubectl get secret/sensor-tls &> /dev/null; then
                echo "cluster-init bundle has already been configured, doing nothing"
                exit 0
              else

                # Wait for central to be ready
                max_attempts=20

                echo "Waiting for central to be available..."
                until $(curl -s -k --output /dev/null --head --fail https://central); do
                  if [ ${max_attempts} -lt 1 ];then
                    echo "Max attempts reached"
                    exit 1
                  fi

                  max_attempts=$(($max_attempts-1))
                  echo "Attempts remaining $max_attempts, waiting..."
                  sleep 5
                done

                echo "Configuring cluster-init bundle"
                export DATA={\"name\":\"local-cluster\"}
                curl -s -k -o /tmp/bundle.json -X POST -u "admin:${PASSWORD}" -H "Content-Type: application/json" --data ${DATA} https://central/v1/cluster-init/init-bundles

                echo "Bundle received"
                cat /tmp/bundle.json

                echo "Applying bundle"
                # No jq in container, python to the rescue
                cat /tmp/bundle.json | python3 -c "import sys, json; print(json.load(sys.stdin)['kubectlBundle'])" | base64 -d | oc apply -f -
                # Touch SecuredCluster to force operator to reconcile
                oc label SecuredCluster local-cluster cluster-init-job-status=created

                echo "ACS Cluster init bundle generated and applied"
              fi
          imagePullPolicy: Always
          name: create-cluster-init-bundle
      dnsPolicy: ClusterFirst
      restartPolicy: Never
      serviceAccount: create-cluster-init
      serviceAccountName: create-cluster-init
      terminationGracePeriodSeconds: 30
